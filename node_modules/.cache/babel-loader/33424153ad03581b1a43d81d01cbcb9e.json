{"ast":null,"code":"var _jsxFileName = \"/Users/MattAguiluz/sei-bromeliad/projects/Project4_neon-pyramid/the-neon-pyramid-frontend/the-neon-pyramid-frontend/neon-pyramid/src/App.js\";\nimport './App.css';\nimport React, { Component } from 'react'; // import LoginRegister from './components/LoginRegister';\n\nimport Logo from './components/Logo';\nimport Nav from './components/Nav';\nimport Menu from './components/Menu'; // import Dish from './components/Dish';\n\nimport Order from './components/Order'; // import Payment from './components/Payment';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet baseUrl = process.env.REACT_APP_BASEURL;\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.register = async e => {\n      e.preventDefault();\n\n      try {\n        const response = await fetch(baseUrl + '/users/register', {\n          method: 'POST',\n          body: JSON.stringify({\n            email: e.target.email.value,\n            username: e.target.username.value,\n            password: e.target.password.value,\n            phone_num: e.target.phone_num.value,\n            address: e.target.address.value,\n            payment_info: {\n              cc_num: e.target.payment_info.cc_num.value,\n              cc_exp: e.target.payment_info.cc_exp.value,\n              cc_sec_code: e.target.payment_info.cc_sec_code.value\n            }\n          }),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n\n        if (response.status === 200) {\n          this.getDishes(); // this.getOrders()\n        }\n      } catch (err) {\n        console.log('Error => ', err);\n        console.log('register failed');\n      }\n    };\n\n    this.loginUser = async e => {\n      e.preventDefault();\n      const loginBody = {\n        username: e.target.username.value,\n        password: e.target.password.value\n      };\n    };\n\n    this.getDishes = () => {\n      console.log('hit getDishes');\n      fetch(baseUrl + '/dishes/', {\n        credentials: 'include'\n      }).then(res => {\n        if (res.status === 200) {\n          console.log('ðŸ¥¡ fetch index dishes successful! ðŸ¥¡');\n          return res.json();\n        } else {\n          console.log('fetch index dishes failed...ðŸ’£');\n          return [];\n        }\n      }).then(data => {\n        console.log('data: ' + data);\n        this.setState({\n          dishes: data.data\n        });\n        console.log('new data: ' + data);\n      });\n    };\n\n    this.newOrder = async () => {\n      console.log('hit newOrder');\n\n      try {\n        const response = await fetch(baseUrl + '/orders/', {\n          method: 'POST',\n          body: JSON.stringify({\n            total: 0.0\n          }),\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          credentials: 'include'\n        });\n        console.log(response.status);\n\n        if (response.status === 201) {\n          console.log('new order created!');\n          const newOrder = await response.json();\n          console.log('new order :' + newOrder);\n          const copyOrders = [...this.state.orders];\n          copyOrders.push(newOrder);\n          this.setState({\n            orders: copyOrders,\n            currentOrderId: newOrder.id,\n            currentOrder: newOrder\n          });\n        }\n      } catch (err) {\n        console.log('Error -> ', err);\n        console.log('order not created...');\n      }\n    };\n\n    this.addDishToOrder = dish_id => {\n      console.log('dish id: ' + dish_id, 'order id :' + this.currentOrderId);\n\n      if (this.currentOrderId === undefined) {\n        this.newOrder();\n        console.log('order created: ' + this.state.currentOrder);\n      } else {\n        console.log('existing order: ' + this.state.currentOrder);\n      }\n\n      const copyOrders = [...this.state.orders];\n      const dishToAdd = this.state.dishes.find(dish => dish.dish_id === dish_id);\n      console.log(dishToAdd);\n      copyOrders.push(dishToAdd);\n      this.setState({\n        orders: copyOrders,\n        currentOrder: copyOrders[copyOrders.length - 1]\n      });\n      console.log('current order: ' + this.state.currentOrder);\n    };\n\n    this.state = {\n      username: '',\n      password: '',\n      email: '',\n      phone_num: '',\n      address: '',\n      payment_info: {},\n      userLoggedIn: false,\n      modalOpen: false,\n      orders: [],\n      dishes: [],\n      currentOrder: {},\n      currentOrderId: null\n    };\n  }\n\n  componentDidMount() {\n    this.getDishes();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bottom-container\",\n        children: [/*#__PURE__*/_jsxDEV(Menu, {\n          dishes: this.state.dishes,\n          newOrder: this.newOrder,\n          addDishToOrder: this.addDishToOrder\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Order, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/MattAguiluz/sei-bromeliad/projects/Project4_neon-pyramid/the-neon-pyramid-frontend/the-neon-pyramid-frontend/neon-pyramid/src/App.js"],"names":["React","Component","Logo","Nav","Menu","Order","baseUrl","process","env","REACT_APP_BASEURL","App","constructor","register","e","preventDefault","response","fetch","method","body","JSON","stringify","email","target","value","username","password","phone_num","address","payment_info","cc_num","cc_exp","cc_sec_code","headers","status","getDishes","err","console","log","loginUser","loginBody","credentials","then","res","json","data","setState","dishes","newOrder","total","copyOrders","state","orders","push","currentOrderId","id","currentOrder","addDishToOrder","dish_id","undefined","dishToAdd","find","dish","length","userLoggedIn","modalOpen","componentDidMount","render"],"mappings":";AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAOC,IAAP,MAAiB,mBAAjB,C,CACA;;AACA,OAAOC,KAAP,MAAkB,oBAAlB,C,CACA;;;AAGA,IAAIC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,iBAA1B;;AAEA,MAAMC,GAAN,SAAkBT,SAAlB,CAA4B;AAC1BU,EAAAA,WAAW,GAAE;AACX;;AADW,SAkBbC,QAlBa,GAkBF,MAAOC,CAAP,IAAa;AACtBA,MAAAA,CAAC,CAACC,cAAF;;AACA,UAAG;AACD,cAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACV,OAAO,GAAG,iBAAX,EAA8B;AACxDW,UAAAA,MAAM,EAAE,MADgD;AAExDC,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,YAAAA,KAAK,EAAER,CAAC,CAACS,MAAF,CAASD,KAAT,CAAeE,KADH;AAEnBC,YAAAA,QAAQ,EAAEX,CAAC,CAACS,MAAF,CAASE,QAAT,CAAkBD,KAFT;AAGnBE,YAAAA,QAAQ,EAAEZ,CAAC,CAACS,MAAF,CAASG,QAAT,CAAkBF,KAHT;AAInBG,YAAAA,SAAS,EAAEb,CAAC,CAACS,MAAF,CAASI,SAAT,CAAmBH,KAJX;AAKnBI,YAAAA,OAAO,EAAEd,CAAC,CAACS,MAAF,CAASK,OAAT,CAAiBJ,KALP;AAMnBK,YAAAA,YAAY,EAAG;AACbC,cAAAA,MAAM,EAAEhB,CAAC,CAACS,MAAF,CAASM,YAAT,CAAsBC,MAAtB,CAA6BN,KADxB;AAEbO,cAAAA,MAAM,EAAEjB,CAAC,CAACS,MAAF,CAASM,YAAT,CAAsBE,MAAtB,CAA6BP,KAFxB;AAGbQ,cAAAA,WAAW,EAAElB,CAAC,CAACS,MAAF,CAASM,YAAT,CAAsBG,WAAtB,CAAkCR;AAHlC;AANI,WAAf,CAFkD;AAcxDS,UAAAA,OAAO,EAAE;AACP,4BAAgB;AADT;AAd+C,SAA9B,CAA5B;;AAkBA,YAAIjB,QAAQ,CAACkB,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,eAAKC,SAAL,GAD2B,CAE3B;AACD;AACF,OAvBD,CAwBA,OAAMC,GAAN,EAAW;AACTC,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,GAAzB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACD;AACF,KAhDY;;AAAA,SAkDbC,SAlDa,GAkDD,MAAOzB,CAAP,IAAa;AACvBA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAMyB,SAAS,GAAG;AAChBf,QAAAA,QAAQ,EAAEX,CAAC,CAACS,MAAF,CAASE,QAAT,CAAkBD,KADZ;AAEhBE,QAAAA,QAAQ,EAAEZ,CAAC,CAACS,MAAF,CAASG,QAAT,CAAkBF;AAFZ,OAAlB;AAID,KAxDY;;AAAA,SA0DbW,SA1Da,GA0DD,MAAM;AAChBE,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACArB,MAAAA,KAAK,CAACV,OAAO,GAAG,UAAX,EAAuB;AAC1BkC,QAAAA,WAAW,EAAE;AADa,OAAvB,CAAL,CAGCC,IAHD,CAGOC,GAAG,IAAI;AACZ,YAAGA,GAAG,CAACT,MAAJ,KAAe,GAAlB,EAAuB;AACrBG,UAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ;AACA,iBAAOK,GAAG,CAACC,IAAJ,EAAP;AACD,SAHD,MAGO;AACLP,UAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;AACA,iBAAM,EAAN;AACD;AACF,OAXD,EAYCI,IAZD,CAYMG,IAAI,IAAI;AACZR,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAWO,IAAvB;AACA,aAAKC,QAAL,CAAc;AACZC,UAAAA,MAAM,EAAEF,IAAI,CAACA;AADD,SAAd;AAGAR,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAeO,IAA3B;AACD,OAlBD;AAmBD,KA/EY;;AAAA,SAiFbG,QAjFa,GAiFF,YAAY;AACrBX,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;;AAEA,UAAG;AACD,cAAMtB,QAAQ,GAAG,MAAMC,KAAK,CAACV,OAAO,GAAG,UAAX,EAAuB;AACjDW,UAAAA,MAAM,EAAE,MADyC;AAEjDC,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnB4B,YAAAA,KAAK,EAAE;AADY,WAAf,CAF2C;AAKjDhB,UAAAA,OAAO,EAAE;AACP,4BAAgB;AADT,WALwC;AAQjDQ,UAAAA,WAAW,EAAE;AARoC,SAAvB,CAA5B;AAWAJ,QAAAA,OAAO,CAACC,GAAR,CAAYtB,QAAQ,CAACkB,MAArB;;AAEA,YAAGlB,QAAQ,CAACkB,MAAT,KAAoB,GAAvB,EAA2B;AACzBG,UAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACA,gBAAMU,QAAQ,GAAG,MAAMhC,QAAQ,CAAC4B,IAAT,EAAvB;AACAP,UAAAA,OAAO,CAACC,GAAR,CAAY,gBAAgBU,QAA5B;AACA,gBAAME,UAAU,GAAG,CAAC,GAAG,KAAKC,KAAL,CAAWC,MAAf,CAAnB;AACAF,UAAAA,UAAU,CAACG,IAAX,CAAgBL,QAAhB;AACA,eAAKF,QAAL,CAAc;AACZM,YAAAA,MAAM,EAAEF,UADI;AAEZI,YAAAA,cAAc,EAAEN,QAAQ,CAACO,EAFb;AAGZC,YAAAA,YAAY,EAAER;AAHF,WAAd;AAKD;AACF,OA1BD,CA2BA,OAAMZ,GAAN,EAAU;AACRC,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,GAAzB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACD;AAEF,KApHY;;AAAA,SAsHbmB,cAtHa,GAsHIC,OAAD,IAAY;AAC1BrB,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAcoB,OAA1B,EAAkC,eAAe,KAAKJ,cAAtD;;AAEA,UAAG,KAAKA,cAAL,KAAwBK,SAA3B,EAAqC;AACnC,aAAKX,QAAL;AACAX,QAAAA,OAAO,CAACC,GAAR,CAAY,oBAAoB,KAAKa,KAAL,CAAWK,YAA3C;AACD,OAHD,MAGO;AACLnB,QAAAA,OAAO,CAACC,GAAR,CAAY,qBAAqB,KAAKa,KAAL,CAAWK,YAA5C;AACD;;AACC,YAAMN,UAAU,GAAG,CAAC,GAAG,KAAKC,KAAL,CAAWC,MAAf,CAAnB;AACA,YAAMQ,SAAS,GAAG,KAAKT,KAAL,CAAWJ,MAAX,CAAkBc,IAAlB,CAAuBC,IAAI,IAAIA,IAAI,CAACJ,OAAL,KAAiBA,OAAhD,CAAlB;AACArB,MAAAA,OAAO,CAACC,GAAR,CAAYsB,SAAZ;AACAV,MAAAA,UAAU,CAACG,IAAX,CAAgBO,SAAhB;AACA,WAAKd,QAAL,CAAc;AACZM,QAAAA,MAAM,EAAEF,UADI;AAEZM,QAAAA,YAAY,EAAEN,UAAU,CAACA,UAAU,CAACa,MAAX,GAAmB,CAApB;AAFZ,OAAd;AAIA1B,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAoB,KAAKa,KAAL,CAAWK,YAA3C;AAEH,KAzIY;;AAEX,SAAKL,KAAL,GAAa;AACX1B,MAAAA,QAAQ,EAAE,EADC;AAEXC,MAAAA,QAAQ,EAAE,EAFC;AAGXJ,MAAAA,KAAK,EAAE,EAHI;AAIXK,MAAAA,SAAS,EAAE,EAJA;AAKXC,MAAAA,OAAO,EAAE,EALE;AAMXC,MAAAA,YAAY,EAAE,EANH;AAOXmC,MAAAA,YAAY,EAAE,KAPH;AAQXC,MAAAA,SAAS,EAAE,KARA;AASXb,MAAAA,MAAM,EAAE,EATG;AAUXL,MAAAA,MAAM,EAAE,EAVG;AAWXS,MAAAA,YAAY,EAAE,EAXH;AAYXF,MAAAA,cAAc,EAAE;AAZL,KAAb;AAcD;;AA2HDY,EAAAA,iBAAiB,GAAE;AACjB,SAAK/B,SAAL;AACD;;AAEDgC,EAAAA,MAAM,GAAE;AAGN,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACA,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,cADA,eAEA,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,cAFA,eAIA;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,gCACE,QAAC,IAAD;AACE,UAAA,MAAM,EAAI,KAAKhB,KAAL,CAAWJ,MADvB;AAEE,UAAA,QAAQ,EAAI,KAAKC,QAFnB;AAGE,UAAA,cAAc,EAAI,KAAKS;AAHzB;AAAA;AAAA;AAAA;AAAA,gBADF,eAME,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAkBD;;AArKyB;;AAwK5B,eAAe9C,GAAf","sourcesContent":["import './App.css';\nimport React, { Component } from 'react';\n// import LoginRegister from './components/LoginRegister';\nimport Logo from './components/Logo';\nimport Nav from './components/Nav';\nimport Menu from './components/Menu';\n// import Dish from './components/Dish';\nimport Order from './components/Order';\n// import Payment from './components/Payment';\n\n\nlet baseUrl = process.env.REACT_APP_BASEURL\n\nclass App extends Component {\n  constructor(){\n    super()\n    this.state = {\n      username: '',\n      password: '',\n      email: '',\n      phone_num: '',\n      address: '',\n      payment_info: {},\n      userLoggedIn: false,\n      modalOpen: false,\n      orders: [],\n      dishes: [],\n      currentOrder: {},\n      currentOrderId: null,\n    }\n  }\n\n  register = async (e) => {\n    e.preventDefault()\n    try{\n      const response = await fetch(baseUrl + '/users/register', {\n        method: 'POST',\n        body: JSON.stringify({\n          email: e.target.email.value,\n          username: e.target.username.value,\n          password: e.target.password.value,\n          phone_num: e.target.phone_num.value,\n          address: e.target.address.value,\n          payment_info : {\n            cc_num: e.target.payment_info.cc_num.value,\n            cc_exp: e.target.payment_info.cc_exp.value,\n            cc_sec_code: e.target.payment_info.cc_sec_code.value,\n          }\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      })\n      if (response.status === 200) {\n        this.getDishes()\n        // this.getOrders()\n      }\n    }\n    catch(err) {\n      console.log('Error => ', err)\n      console.log('register failed')\n    }\n  }\n\n  loginUser = async (e) => {\n    e.preventDefault()\n    const loginBody = {\n      username: e.target.username.value,\n      password: e.target.password.value,\n    }\n  }\n\n  getDishes = () => {\n    console.log('hit getDishes')\n    fetch(baseUrl + '/dishes/', {\n      credentials: 'include'\n    })\n    .then (res => {\n      if(res.status === 200) {\n        console.log('ðŸ¥¡ fetch index dishes successful! ðŸ¥¡')\n        return res.json()\n      } else {\n        console.log('fetch index dishes failed...ðŸ’£')\n        return[]\n      }\n    })\n    .then(data => {\n      console.log('data: ' + data)\n      this.setState({\n        dishes: data.data\n      })\n      console.log('new data: ' + data)\n    })\n  } \n\n  newOrder = async () => {\n    console.log('hit newOrder')\n\n    try{\n      const response = await fetch(baseUrl + '/orders/', {\n        method: 'POST',\n        body: JSON.stringify({\n          total: 0.0,\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }, \n        credentials: 'include'\n      })\n      \n      console.log(response.status)\n\n      if(response.status === 201){\n        console.log('new order created!')\n        const newOrder = await response.json()\n        console.log('new order :' + newOrder)\n        const copyOrders = [...this.state.orders]\n        copyOrders.push(newOrder)\n        this.setState({\n          orders: copyOrders,\n          currentOrderId: newOrder.id,\n          currentOrder: newOrder,\n        })\n      }\n    }\n    catch(err){\n      console.log('Error -> ', err)\n      console.log('order not created...')\n    }\n\n  }\n\n  addDishToOrder =(dish_id)=> {\n    console.log('dish id: ' + dish_id,'order id :' + this.currentOrderId)\n    \n    if(this.currentOrderId === undefined){\n      this.newOrder()\n      console.log('order created: ' + this.state.currentOrder)\n    } else {\n      console.log('existing order: ' + this.state.currentOrder)\n    }\n      const copyOrders = [...this.state.orders]\n      const dishToAdd = this.state.dishes.find(dish => dish.dish_id === dish_id)\n      console.log(dishToAdd)\n      copyOrders.push(dishToAdd)\n      this.setState({\n        orders: copyOrders,\n        currentOrder: copyOrders[copyOrders.length -1],\n      })\n      console.log('current order: ' + this.state.currentOrder)\n\n  }\n\n  componentDidMount(){\n    this.getDishes()\n  }\n  \n  render(){\n\n    \n    return (\n      <div className=\"App\">\n      <Logo />\n      <Nav />\n\n      <div className=\"bottom-container\">\n        <Menu \n          dishes = {this.state.dishes}\n          newOrder = {this.newOrder}\n          addDishToOrder = {this.addDishToOrder}\n        />\n        <Order />\n      </div>\n      {/* <LoginRegister /> */}\n      {/* <Dish /> */}\n      {/* <Payment /> */}\n    </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}