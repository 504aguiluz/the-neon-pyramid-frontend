{"ast":null,"code":"var _jsxFileName = \"/Users/MattAguiluz/sei-bromeliad/projects/Project4_neon-pyramid/the-neon-pyramid-frontend/the-neon-pyramid-frontend/neon-pyramid/src/App.js\";\nimport './App.css';\nimport React, { Component } from 'react'; // import LoginRegister from './components/LoginRegister';\n\nimport Logo from './components/Logo';\nimport Nav from './components/Nav';\nimport Menu from './components/Menu'; // import Dish from './components/Dish';\n\nimport Order from './components/Order'; // import Payment from './components/Payment';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet baseUrl = process.env.REACT_APP_BASEURL;\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.getDishes = () => {\n      console.log('hit getDishes');\n      fetch(baseUrl + '/dishes/', {\n        credentials: 'include'\n      }).then(res => {\n        if (res.status === 200) {\n          console.log('游보 fetch index dishes successful! 游보');\n          return res.json();\n        } else {\n          console.log('fetch index dishes failed...游눢');\n          return [];\n        }\n      }).then(data => {\n        console.log('data: ' + data);\n        this.setState({\n          dishes: data.data\n        });\n        console.log('new data: ' + data);\n      });\n    };\n\n    this.newOrder = () => {\n      console.log('hit newOrder');\n      fetch(baseUrl + '/orders/', {\n        method: 'POST',\n        body: JSON.stringify({\n          total: 0.0\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include'\n      }).then(res => {\n        console.log('res status: ' + res.status);\n      });\n      const copyOrders = [...this.state.orders];\n      copyOrders.push(newOrder);\n      this.setState({\n        orders: copyOrders,\n        currentOrderId: newOrder.id,\n        currentOrder: newOrder\n      });\n      console.log('new order :' + newOrder);\n    };\n\n    this.addDishToOrder = dish_id => {\n      console.log('dish id: ' + dish_id, 'order id :' + this.currentOrderId);\n\n      if (this.currentOrderId === undefined) {\n        this.newOrder();\n        console.log('order created: ' + this.state.currentOrder);\n      } else {\n        console.log('current order: ' + this.state.currentOrder);\n      }\n\n      const copyOrders = [...this.state.orders];\n      const dishToAdd = this.state.dishes.find(dish => dish.dish_id === dish_id);\n      console.log(dishToAdd);\n      copyOrders.push(dishToAdd);\n      this.setState({\n        orders: copyOrders,\n        currentOrder: copyOrders[copyOrders.length - 1]\n      });\n      console.log('current order: ' + this.state.currentOrder);\n    };\n\n    this.state = {\n      username: '',\n      password: '',\n      email: '',\n      phone_num: '',\n      address: '',\n      payment_info: {},\n      userLoggedIn: false,\n      modalOpen: false,\n      orders: [],\n      dishes: [],\n      currentOrder: {},\n      currentOrderId: null\n    };\n  }\n\n  componentDidMount() {\n    this.getDishes();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bottom-container\",\n        children: [/*#__PURE__*/_jsxDEV(Menu, {\n          dishes: this.state.dishes,\n          newOrder: this.newOrder,\n          addDishToOrder: this.addDishToOrder\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Order, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/MattAguiluz/sei-bromeliad/projects/Project4_neon-pyramid/the-neon-pyramid-frontend/the-neon-pyramid-frontend/neon-pyramid/src/App.js"],"names":["React","Component","Logo","Nav","Menu","Order","baseUrl","process","env","REACT_APP_BASEURL","App","constructor","getDishes","console","log","fetch","credentials","then","res","status","json","data","setState","dishes","newOrder","method","body","JSON","stringify","total","headers","copyOrders","state","orders","push","currentOrderId","id","currentOrder","addDishToOrder","dish_id","undefined","dishToAdd","find","dish","length","username","password","email","phone_num","address","payment_info","userLoggedIn","modalOpen","componentDidMount","render"],"mappings":"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","sourcesContent":["import './App.css';\nimport React, { Component } from 'react';\n// import LoginRegister from './components/LoginRegister';\nimport Logo from './components/Logo';\nimport Nav from './components/Nav';\nimport Menu from './components/Menu';\n// import Dish from './components/Dish';\nimport Order from './components/Order';\n// import Payment from './components/Payment';\n\n\nlet baseUrl = process.env.REACT_APP_BASEURL\n\nclass App extends Component {\n  constructor(){\n    super()\n    this.state = {\n      username: '',\n      password: '',\n      email: '',\n      phone_num: '',\n      address: '',\n      payment_info: {},\n      userLoggedIn: false,\n      modalOpen: false,\n      orders: [],\n      dishes: [],\n      currentOrder: {},\n      currentOrderId: null,\n    }\n  }\n\n  getDishes = () => {\n    console.log('hit getDishes')\n    fetch(baseUrl + '/dishes/', {\n      credentials: 'include'\n    })\n    .then (res => {\n      if(res.status === 200) {\n        console.log('游보 fetch index dishes successful! 游보')\n        return res.json()\n      } else {\n        console.log('fetch index dishes failed...游눢')\n        return[]\n      }\n    })\n    .then(data => {\n      console.log('data: ' + data)\n      this.setState({\n        dishes: data.data\n      })\n      console.log('new data: ' + data)\n    })\n  } \n\n  newOrder = () => {\n    console.log('hit newOrder')\n    fetch(baseUrl + '/orders/', {\n      method: 'POST',\n      body: JSON.stringify({\n        total: 0.0,\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }, \n      credentials: 'include'\n    })\n    .then(res => {\n      console.log('res status: ' + res.status)\n    })\n\n\n    const copyOrders = [...this.state.orders]\n    copyOrders.push(newOrder)\n    this.setState({\n      orders: copyOrders,\n      currentOrderId: newOrder.id,\n      currentOrder: newOrder,\n    })\n    console.log('new order :' + newOrder)\n  }\n\n  addDishToOrder =(dish_id)=> {\n    console.log('dish id: ' + dish_id,'order id :' + this.currentOrderId)\n    \n    if(this.currentOrderId === undefined){\n      this.newOrder()\n      console.log('order created: ' + this.state.currentOrder)\n    } else {\n      console.log('current order: ' + this.state.currentOrder)\n    }\n      const copyOrders = [...this.state.orders]\n      const dishToAdd = this.state.dishes.find(dish => dish.dish_id === dish_id)\n      console.log(dishToAdd)\n      copyOrders.push(dishToAdd)\n      this.setState({\n        orders: copyOrders,\n        currentOrder: copyOrders[copyOrders.length -1],\n      })\n      console.log('current order: ' + this.state.currentOrder)\n\n  }\n\n  componentDidMount(){\n    this.getDishes()\n  }\n  \n  render(){\n\n    \n    return (\n      <div className=\"App\">\n      <Logo />\n      <Nav />\n\n      <div className=\"bottom-container\">\n        <Menu \n          dishes = {this.state.dishes}\n          newOrder = {this.newOrder}\n          addDishToOrder = {this.addDishToOrder}\n        />\n        <Order />\n      </div>\n      {/* <LoginRegister /> */}\n      {/* <Dish /> */}\n      {/* <Payment /> */}\n    </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}