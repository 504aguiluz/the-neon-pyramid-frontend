{"ast":null,"code":"var _jsxFileName = \"/Users/MattAguiluz/sei-bromeliad/projects/Project4_neon-pyramid/the-neon-pyramid-frontend/the-neon-pyramid-frontend/neon-pyramid/src/App.js\";\nimport './App.css';\nimport React, { Component } from 'react'; // import LoginRegister from './components/LoginRegister';\n\nimport Logo from './components/Logo';\nimport Nav from './components/Nav';\nimport Menu from './components/Menu'; // import Dish from './components/Dish';\n\nimport Order from './components/Order'; // import Payment from './components/Payment';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet baseUrl = process.env.REACT_APP_BASEURL;\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.getDishes = () => {\n      console.log('hit getDishes');\n      fetch(baseUrl + '/dishes/', {\n        credentials: 'include'\n      }).then(res => {\n        if (res.status === 200) {\n          console.log('ðŸ¥¡ fetch index dishes successful! ðŸ¥¡');\n          return res.json();\n        } else {\n          console.log('fetch index dishes failed...ðŸ’£');\n          return [];\n        }\n      }).then(data => {\n        console.log('data: ' + data);\n        this.setState({\n          dishes: data.data\n        });\n        console.log('new data: ' + data);\n      });\n    };\n\n    this.newOrder = async () => {\n      console.log('hit newOrder');\n\n      try {\n        const response = await fetch(baseUrl + '/orders/', {\n          method: 'POST',\n          body: JSON.stringify({\n            total: 0.0\n          }),\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          credentials: 'include'\n        });\n        console.log(response.status);\n\n        if (response.status === 201) {\n          console.log('new order created!');\n          const newOrder = await response.json();\n          this.setState({\n            currentOrder: newOrder,\n            currentOrderId: newOrder.id\n          });\n        }\n      } catch (err) {\n        console.log('Error -> ', err);\n        console.log('order not created...');\n      }\n\n      const copyOrders = [...this.state.orders];\n      copyOrders.push(newOrder);\n      this.setState({\n        orders: copyOrders,\n        currentOrderId: newOrder.id,\n        currentOrder: newOrder\n      });\n      console.log('new order :' + newOrder);\n    };\n\n    this.addDishToOrder = dish_id => {\n      console.log('dish id: ' + dish_id, 'order id :' + this.currentOrderId);\n\n      if (this.currentOrderId === undefined) {\n        this.newOrder();\n        console.log('order created: ' + this.state.currentOrder);\n      } else {\n        console.log('current order: ' + this.state.currentOrder);\n      }\n\n      const copyOrders = [...this.state.orders];\n      const dishToAdd = this.state.dishes.find(dish => dish.dish_id === dish_id);\n      console.log(dishToAdd);\n      copyOrders.push(dishToAdd);\n      this.setState({\n        orders: copyOrders,\n        currentOrder: copyOrders[copyOrders.length - 1]\n      });\n      console.log('current order: ' + this.state.currentOrder);\n    };\n\n    this.state = {\n      username: '',\n      password: '',\n      email: '',\n      phone_num: '',\n      address: '',\n      payment_info: {},\n      userLoggedIn: false,\n      modalOpen: false,\n      orders: [],\n      dishes: [],\n      currentOrder: {},\n      currentOrderId: null\n    };\n  }\n\n  componentDidMount() {\n    this.getDishes();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bottom-container\",\n        children: [/*#__PURE__*/_jsxDEV(Menu, {\n          dishes: this.state.dishes,\n          newOrder: this.newOrder,\n          addDishToOrder: this.addDishToOrder\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Order, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/MattAguiluz/sei-bromeliad/projects/Project4_neon-pyramid/the-neon-pyramid-frontend/the-neon-pyramid-frontend/neon-pyramid/src/App.js"],"names":["React","Component","Logo","Nav","Menu","Order","baseUrl","process","env","REACT_APP_BASEURL","App","constructor","getDishes","console","log","fetch","credentials","then","res","status","json","data","setState","dishes","newOrder","response","method","body","JSON","stringify","total","headers","currentOrder","currentOrderId","id","err","copyOrders","state","orders","push","addDishToOrder","dish_id","undefined","dishToAdd","find","dish","length","username","password","email","phone_num","address","payment_info","userLoggedIn","modalOpen","componentDidMount","render"],"mappings":"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","sourcesContent":["import './App.css';\nimport React, { Component } from 'react';\n// import LoginRegister from './components/LoginRegister';\nimport Logo from './components/Logo';\nimport Nav from './components/Nav';\nimport Menu from './components/Menu';\n// import Dish from './components/Dish';\nimport Order from './components/Order';\n// import Payment from './components/Payment';\n\n\nlet baseUrl = process.env.REACT_APP_BASEURL\n\nclass App extends Component {\n  constructor(){\n    super()\n    this.state = {\n      username: '',\n      password: '',\n      email: '',\n      phone_num: '',\n      address: '',\n      payment_info: {},\n      userLoggedIn: false,\n      modalOpen: false,\n      orders: [],\n      dishes: [],\n      currentOrder: {},\n      currentOrderId: null,\n    }\n  }\n\n  getDishes = () => {\n    console.log('hit getDishes')\n    fetch(baseUrl + '/dishes/', {\n      credentials: 'include'\n    })\n    .then (res => {\n      if(res.status === 200) {\n        console.log('ðŸ¥¡ fetch index dishes successful! ðŸ¥¡')\n        return res.json()\n      } else {\n        console.log('fetch index dishes failed...ðŸ’£')\n        return[]\n      }\n    })\n    .then(data => {\n      console.log('data: ' + data)\n      this.setState({\n        dishes: data.data\n      })\n      console.log('new data: ' + data)\n    })\n  } \n\n  newOrder = async () => {\n    console.log('hit newOrder')\n\n    try{\n\n      const response = await fetch(baseUrl + '/orders/', {\n        method: 'POST',\n        body: JSON.stringify({\n          total: 0.0,\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }, \n        credentials: 'include'\n      })\n      \n      console.log(response.status)\n\n      if(response.status === 201){\n        console.log('new order created!')\n        const newOrder = await response.json()\n        this.setState({\n          currentOrder: newOrder,\n          currentOrderId: newOrder.id,\n        })\n      }\n    }\n    catch(err){\n      console.log('Error -> ', err)\n      console.log('order not created...')\n    }\n\n    const copyOrders = [...this.state.orders]\n    copyOrders.push(newOrder)\n    this.setState({\n      orders: copyOrders,\n      currentOrderId: newOrder.id,\n      currentOrder: newOrder,\n    })\n    console.log('new order :' + newOrder)\n  }\n\n  addDishToOrder =(dish_id)=> {\n    console.log('dish id: ' + dish_id,'order id :' + this.currentOrderId)\n    \n    if(this.currentOrderId === undefined){\n      this.newOrder()\n      console.log('order created: ' + this.state.currentOrder)\n    } else {\n      console.log('current order: ' + this.state.currentOrder)\n    }\n      const copyOrders = [...this.state.orders]\n      const dishToAdd = this.state.dishes.find(dish => dish.dish_id === dish_id)\n      console.log(dishToAdd)\n      copyOrders.push(dishToAdd)\n      this.setState({\n        orders: copyOrders,\n        currentOrder: copyOrders[copyOrders.length -1],\n      })\n      console.log('current order: ' + this.state.currentOrder)\n\n  }\n\n  componentDidMount(){\n    this.getDishes()\n  }\n  \n  render(){\n\n    \n    return (\n      <div className=\"App\">\n      <Logo />\n      <Nav />\n\n      <div className=\"bottom-container\">\n        <Menu \n          dishes = {this.state.dishes}\n          newOrder = {this.newOrder}\n          addDishToOrder = {this.addDishToOrder}\n        />\n        <Order />\n      </div>\n      {/* <LoginRegister /> */}\n      {/* <Dish /> */}\n      {/* <Payment /> */}\n    </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}